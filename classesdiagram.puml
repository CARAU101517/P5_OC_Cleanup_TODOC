@startuml Todoc Classes Diagram
class Task {
 - id : long
 - projectId : long
 - name : String
 - creationTimestamp : long
 ..Getter..
 + getId()
 + getName()
 + Project getProject()
 ..Setter..
 - setId(long id)
 - setProjectId(long projectId)
 - setName(@NonNull String name)
 - setCreationTimestamp(long creationTimestamp)
 }

class TaskAZComparator {
 + int compare(Task left, Task right)
 }

class TaskZAComparator {
 + int compare(Task left, Task right)
 }

class TaskRecentComparator {
+ int compare(Task left, Task right)
 }

class TaskOldComparator {
 + int compare(Task left, Task right)
 }

class Project {
 - id : long
 - name : String
 - color : int
 ..Getter..
 + Project[] getAllProjects()
 + getProjectById(long id)
 + getId()
 + getName()
 + getColor()
 + toString()
 }

Project <--* Task
Task <-- Project
class Task #back:palegreen
class Project #back:palegreen

TaskAZComparator -- Task : sort
TaskZAComparator -- Task : sort
TaskRecentComparator -- Task : sort
TaskOldComparator -- Task : sort

class MainActivity {
 - allProject : Project[]
 - tasks : ArrayList<Task>
 - adapter : TaskAdapter
 - sortMethod : SortMethod
 + dialog : AlertDialog
 - dialogEditText : EditText
 - spinnerEditText : Spinner
 - taskViewModel : TaskViewModel
 - listTasks : RecyclerView
 - lblNoTasks : TextView

 + onCreate()
 + onClick()
 + onCreateOptionsMenu()
 + onOptionsItemSelected()
 + onDeleteTask()
 - onPositiveButtonClick()
 - showAddTaskDialog()
 - addTask()
 - upDateTask()
 - getAddTaskDialog()
 - populateDialogSpinner()
 - configureViewModel()
 - - SortMethod()
 }

 circle TaskDao
 circle TodocDatabase
 circle ProjectDao

 circle TaskDao #back:lightblue
  circle TodocDatabase #back:lightblue
  circle ProjectDao #back:lightblue

 class TaskDataRepository {
  - taskDao : TaskDao

    TaskDataRepository()
  + getATask()
  + getTasks()
  + getTasksFromAProject()
  + insertTask()
  + upDateTask()
  + deleteTask()
  }

 class ProjectDataRepository {
  - projectDao : ProjectDao

    ProjectDataRepository()
  + createProject()
  + getProjectById()
  }

 class ViewModelFactory {
 - taskDataRepository : TaskDataRepository
 - projectDataRepository : ProjectDataRepository
 - executor : Executor

 + ViewModelFactory()
 + create()
 }

class TaskViewModel {
 - taskDataRepository : TaskDataRepository
 - projectDataRepository : ProjectDataRepository
 - executor : Executor

   TaskViewModel()
 + allTasks()
 + aTask()
 + allTasksFromAProject()
 + createATask()
 + updateAtask()
 + deleteAtask()
 }

 class Injection{
 + provideTaskDataRepository()
 + provideProjectDataRepository()
 + provideExecutor()
 + provideViewModelFactory()
 }

 class TasksAdapter {
  - tasks : List<Task>
  - deleteTaskListener : DeleteTaskListener

    TaskAdapter()
  + upDateTasks()
  + onCreateViewHolder()
  + onBindViewHolder()
  + getItemCount()
  + DeleteTaskListener()
  + deleteAtask()
  }

  class TaskViewHolder {
  - imgProject : AppCompatImageView
  - lblTaskName : TextView
  - lblProjectName : TextView
  - imgDelete : AppCompatImageView
  - deleteTaskListener : DeleteTaskListener

   TaskViewHolder()
   bind()
  }

  TaskViewHolder -- TasksAdapter
  TasksAdapter -- MainActivity
  MainActivity -- TaskViewModel
  ViewModelFactory -- TaskViewModel
  Injection -- ViewModelFactory
  ProjectDataRepository -- TaskViewModel
  TaskDataRepository -- TaskViewModel
  ProjectDao -- ProjectDataRepository
  TaskDao -- TaskDataRepository
  TaskDao -- TodocDatabase
  ProjectDao -- TodocDatabase
  Task -- TaskDao
  Project -- ProjectDao

  class MainActivity #back:palegreen
  class TaskDataRepository #back:lightblue
  class ProjectDataRepository #back:lightblue
  class TaskViewModel #back:lightblue
  class ViewModelFactory #back:lightblue
  class Injection #back:lightblue

@enduml
